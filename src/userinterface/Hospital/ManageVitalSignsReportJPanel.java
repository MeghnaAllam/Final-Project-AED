/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Hospital;

import Business.City.City;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Hospital;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.VitalSigns.VitalSigns;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author japangor
 */
public class ManageVitalSignsReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageVitalSignsReportJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount userAccount;
    Organization organization;
    Enterprise enterprise;
    City city;
    Patient p;
    public ManageVitalSignsReportJPanel(JPanel userProcessContainer, City city, UserAccount userAccount, Organization organization, 
            Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;  
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        this.city=city;
        this.organization=organization;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearch = new javax.swing.JButton();
        txtPulse = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        lblTemperature = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVitalSigns = new javax.swing.JTable();
        lblManageManufacturer = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        lblPulse = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblBloodPressure1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, -1));
        add(txtPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 212, -1));
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 220, -1));
        add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 212, -1));
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 212, -1));

        lblTemperature.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblTemperature.setText("Temperature:");
        add(lblTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, -1, -1));

        tblVitalSigns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Blood Pressure", "Temperature", "SP02 Level", "Date"
            }
        ));
        jScrollPane1.setViewportView(tblVitalSigns);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 910, 183));

        lblManageManufacturer.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblManageManufacturer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageManufacturer.setText("MANAGE PATIENT VITAL SIGNS");
        add(lblManageManufacturer, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 650, -1));

        btnCreate.setBackground(new java.awt.Color(0, 0, 0));
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, -1, -1));

        lblPulse.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblPulse.setText("SP02");
        add(lblPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, -1, -1));

        lblBloodPressure.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblBloodPressure.setText("Patient Name:");
        add(lblBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        lblBloodPressure1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblBloodPressure1.setText("Blood Pressure:");
        add(lblBloodPressure1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try{
        int SPO2 = Integer.parseInt(txtPulse.getText());
        int BloodPressure = Integer.parseInt(txtBloodPressure.getText());
        double temperature = Double.parseDouble(txtTemperature.getText());
        VitalSigns vs;
        System.out.println(p.getVitalHistory());
        vs=p.getVitalHistory().addVitalDir(BloodPressure, temperature, SPO2);
        populaTable();
        }
        catch(Exception e ){
            JOptionPane.showMessageDialog(this,"Invalid Input");
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       try{
        String patientName = txtSearch.getText();
        for(City c : system.getCityList()){
             
           for(Enterprise e : c.getEnterpriseDirectory().getEnterpriseList()){
               //Hospital hos = (Hospital)e;
               if(e.getClass().getName().equals("Business.Enterprise.Hospital")){
                   Hospital hos = (Hospital)e;
                   //System.out.println(e);
                    for(Patient patient: hos.getPatientDirectory().getPatientDir()){
                        if(patient.getName().equals(patientName)){
                            p=patient;
                        }
//                        else{
//                            JOptionPane.showMessageDialog(null, "Patient not found", "Warning", JOptionPane.WARNING_MESSAGE);
//                        }
                    }
               }
           }
        }
        JOptionPane.showMessageDialog(this, "Patient found you can proceed");
       }
       catch(Exception e){
           JOptionPane.showMessageDialog(this,"Patient not found");
       }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        HospitalStaffJPanel sysAdminwjp = (HospitalStaffJPanel) component;
        //        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBloodPressure1;
    private javax.swing.JLabel lblManageManufacturer;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JTable tblVitalSigns;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables

    private void populaTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblVitalSigns.getModel();
        dtm.setRowCount(0);
                
                    for (VitalSigns v : p.getVitalHistory().getVitalDir()) {
                    
                    Object[] row = new Object[5];
                    row[0] = p.getName();
                    row[1] = v.getBloodPressure();
                    row[2] = v.getTemperature();
                    row[3] = v.getTemperature();
                    row[4] = v.getDate();

                    dtm.addRow(row);
                } //To change body of generated methods, choose Tools | Templates.
    }
}
